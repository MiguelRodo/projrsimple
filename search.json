[{"path":"https://miguelrodo.github.io/projrsimple/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 projrsimple authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/articles/intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to projrsimple","text":"goal projrsimple make easy run clean project workflow. helps initialise reproducible project structure pre‐defined directories, run analysis scripts, ensure clean output directories minimal effort.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/articles/intro.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to projrsimple","text":"can install development version projrsimple like :","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"MiguelRodo/projrsimple\")"},{"path":"https://miguelrodo.github.io/projrsimple/articles/intro.html","id":"tldr","dir":"Articles","previous_headings":"","what":"TL;DR","title":"Introduction to projrsimple","text":"Install projrsimple (see ). Open R session project directory (folder want work). Run projr_init() initialise project. Write code scripts (.R, .Rmd, .qmd /Quarto projects) project directory. Run projr_run execute scripts. Save outputs _output directory. View rendered documents docs directory. connect GitHub automatically, run projr_init(init_github = TRUE) (step 3) following steps: Create GitHub account (link). Set personal access token (PAT) R (instructions).","code":""},{"path":[]},{"path":"https://miguelrodo.github.io/projrsimple/articles/intro.html","id":"project-initialisation-with-projr_init","dir":"Articles","previous_headings":"Details","what":"Project Initialisation with projr_init","title":"Introduction to projrsimple","text":"function projr_init designed help quickly set standard project structure. (features optional): Create Standard Directories: default, creates directories : Raw data: _raw_data Rendered documents: docs Final outputs: _output Temporary/cache files: _tmp Raw (non‐rendered) docs: _reference can supply values (provide NULL skip directory). Initialise Git Repository: projr_init can initialise Git repository project. automatically add cache directory (default _tmp) .gitignore avoid committing temporary files, (enabled) add commit changes.Note: push repository GitHub, ’ll need GitHub account must ensure R configured personal access token (PAT). Create README File: default README created instructions run analyses using projrsimple, well brief description project, structure empty fields links project details. Connect GitHub: projr_init can connect local Git repository GitHub. repository private default.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/articles/intro.html","id":"running-analyses-with-projr_run","dir":"Articles","previous_headings":"Details","what":"Running Analyses with projr_run","title":"Introduction to projrsimple","text":"initialised project, can use projr_run execute analyses. default: Script Detection Execution: scripts working directory extensions .R, .Rmd/.rmd, .qmd run automatically. Quarto project detected (_quarto.yml exists), Quarto project rendered. Copying Generated Documents: function copy generated documents (typically .html, .pdf, .docx) docs directory. Output Directory Management: Optionally, output directory (default _output) cleared running scripts. default, FALSE (avoid unintended deletions), set TRUE ensure clean runs. Selective Execution: can specify subset scripts run, rather found scripts directory.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/articles/intro.html","id":"multiple-pipelines","dir":"Articles","previous_headings":"Details","what":"Multiple pipelines","title":"Introduction to projrsimple","text":"long-running /complex workflows, can run projr_run multiple times create separate “pipelines”. example, might run one pipeline processes raw data another generates reports, using different script selections output/document directories. modular approach allows flexibly manage complex projects multiple stages.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/articles/intro.html","id":"citation","dir":"Articles","previous_headings":"","what":"Citation","title":"Introduction to projrsimple","text":"cite projrsimple publications use: Miguel Rodo (2024). projrsimple: Initialise run simple project workflow. Version 1.0.0. Available : https://github.com/MiguelRodo/projrsimple. Alternatively, BibTeX format:","code":"@Misc{rodo,   title = {projrsimple: Initialise and run a simple project workflow},   author = {Miguel Rodo},   url = {https://github.com/MiguelRodo/projrsimple/#readme},   abstract = {Initialise and run a simple R project workflow},   version = {1.0.0}, }"},{"path":"https://miguelrodo.github.io/projrsimple/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Miguel Rodo. Author, maintainer.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rodo M (????). “projrsimple: Initialise run simple project workflow.” https://github.com/MiguelRodo/projrsimple/#readme.","code":"@Misc{rodo,   title = {projrsimple: Initialise and run a simple project workflow},   author = {Miguel Rodo},   url = {https://github.com/MiguelRodo/projrsimple/#readme},   abstract = {Initialise and run a simple project workflow},   version = {1.0.0}, }"},{"path":"https://miguelrodo.github.io/projrsimple/index.html","id":"projrsimple","dir":"","previous_headings":"","what":"Initialise and run a simple project workflow","title":"Initialise and run a simple project workflow","text":"goal projrsimple make easy run clean project workflow. helps initialise reproducible project structure pre‐defined directories, run analysis scripts, ensure clean output directories minimal effort.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Initialise and run a simple project workflow","text":"can install development version projrsimple like :","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") } remotes::install_github(\"MiguelRodo/projrsimple\")"},{"path":"https://miguelrodo.github.io/projrsimple/index.html","id":"tldr","dir":"","previous_headings":"","what":"TL;DR","title":"Initialise and run a simple project workflow","text":"Install projrsimple (see ). Open R session project directory (folder want work). Run projr_init() initialise project. Write code scripts (.R, .Rmd, .qmd /Quarto projects) project directory. Run projr_run execute scripts. Save outputs _output directory. View rendered documents docs directory. connect GitHub automatically, run projr_init(init_github = TRUE) (step 3) following steps: Create GitHub account (link). Set personal access token (PAT) R (instructions).","code":""},{"path":"https://miguelrodo.github.io/projrsimple/index.html","id":"details","dir":"","previous_headings":"","what":"Details","title":"Initialise and run a simple project workflow","text":"details, view introductory article package website vignette (vignette(\"intro\", package = \"projrsimple\")).","code":""},{"path":"https://miguelrodo.github.io/projrsimple/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Initialise and run a simple project workflow","text":"cite projrsimple publications use: Miguel Rodo (2024). projrsimple: Initialise run simple project workflow. Version 1.0.0. Available : https://github.com/MiguelRodo/projrsimple. Alternatively, BibTeX format:","code":"@Misc{rodo,   title = {projrsimple: Initialise and run a simple project workflow},   author = {Miguel Rodo},   url = {https://github.com/MiguelRodo/projrsimple/#readme},   abstract = {Initialise and run a simple R project workflow},   version = {1.0.0}, }"},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise a New Project with Standard Directories, Git, and README — projr_init","title":"Initialise a New Project with Standard Directories, Git, and README — projr_init","text":"projr_init creates standard project structure making several directories raw data, temporary/cache files, final outputs, rendered docs, raw (non-rendered) docs. also can initialise Git repository (adding cache directory .gitignore optionally adding & committing changes), write README file recommended project instructions, , desired, connect project GitHub.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise a New Project with Standard Directories, Git, and README — projr_init","text":"","code":"projr_init(   dir_raw_data = \"_raw_data\",   dir_cache = \"_tmp\",   dir_docs = \"docs\",   dir_output = \"_output\",   dir_reference = \"_reference\",   init_git = TRUE,   git_add_and_commit_all = TRUE,   init_readme = TRUE,   init_github = FALSE,   github_private = TRUE )"},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise a New Project with Standard Directories, Git, and README — projr_init","text":"dir_raw_data Character. Directory raw data. Defaults \"_raw_data\". Set NULL skip creating directory. dir_cache Character. Directory temporary cache files. Defaults \"_tmp\". Set NULL skip. dir_docs Character. Directory rendered documents. Defaults \"docs\". Set NULL skip. dir_output Character. Directory final outputs. Defaults \"_output\". Set NULL skip. dir_reference Character. Directory non-rendered docs. Defaults \"_reference\". Set NULL skip. init_git Logical. TRUE (default), initialises Git repository current project. git_add_and_commit_all Logical. TRUE (default), attempts add commit untracked modified files Git initialisation. init_readme Logical. TRUE (default), creates README file recommended project instructions. init_github Logical. TRUE, connects project GitHub via usethis::use_github(). Defaults FALSE. github_private Logical. TRUE (default) GitHub initialised (.e. init_github = TRUE), GitHub repository created private. message issued remind user collaborators must added manually via GitHub settings.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialise a New Project with Standard Directories, Git, and README — projr_init","text":"Invisibly returns TRUE complete.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_init.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialise a New Project with Standard Directories, Git, and README — projr_init","text":"default behaviour create standard directories, initialise Git (adding cache directory .gitignore committing changes), write README. wish create one directories, pass NULL parameter.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_init.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialise a New Project with Standard Directories, Git, and README — projr_init","text":"","code":"if (FALSE) { # \\dontrun{ projr_init(   dir_raw_data = \"_raw_data\",   dir_cache = \"_tmp\",   dir_docs = \"docs\",   dir_output = \"_output\",   dir_reference = \"_reference\",   init_git = TRUE,   git_add_and_commit_all = TRUE,   init_readme = TRUE,   init_github = TRUE,   github_private = TRUE ) } # }"},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run project scripts, optionally clearing output and copying docs — projr_run","title":"Run project scripts, optionally clearing output and copying docs — projr_run","text":"function: Collects R, Rmd, qmd scripts dir_scripts, uses supplied character vector. Optionally clears dir_output dir_docs. Sources renders script, skipping .qmd scripts Quarto project detected. default, copies generated .html, .pdf, .docx files dir_docs. default, renders entire Quarto project _quarto.yml found.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run project scripts, optionally clearing output and copying docs — projr_run","text":"","code":"projr_run(   scripts = NULL,   skip_quarto_project = FALSE,   clear_output_and_docs = FALSE,   copy_docs = TRUE,   dir_scripts = NULL,   dir_output = NULL,   dir_docs = NULL,   dir_exec = NULL )"},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run project scripts, optionally clearing output and copying docs — projr_run","text":"scripts Character vector script filenames execute dir_scripts, e.g. c(\"my_script.R\", \"my_doc.Rmd\"). NULL, .R, .Rmd/.rmd, .qmd files dir_scripts used. skip_quarto_project Logical. TRUE, render Quarto project, even _quarto.yml found. clear_output_and_docs Logical. TRUE, clears dir_output dir_docs running. copy_docs Logical. TRUE, copies generated output files (.html, .pdf, .docx) dir_docs. apply Quarto projects. dir_scripts Directory scripts reside. Defaults working directory NULL. dir_output Directory clear clear_output_and_docs = TRUE. Defaults \"_output\" NULL. dir_docs Directory look scripts. Defaults \"docs\" NULL. dir_exec Directory execute scripts. Defaults NULL. R scripts, working directory. .Rmd .qmd scripts, directory containing script. Quarto projects, working directory.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run project scripts, optionally clearing output and copying docs — projr_run","text":"Invisibly returns TRUE complete.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run project scripts, optionally clearing output and copying docs — projr_run","text":"avoid accidental deletion outputs, clear_output_and_docs default FALSE. However, clean run, recommended set clear_output_and_docs TRUE.","code":""},{"path":"https://miguelrodo.github.io/projrsimple/reference/projr_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run project scripts, optionally clearing output and copying docs — projr_run","text":"","code":"if (FALSE) { # \\dontrun{ # Run all scripts in \"scripts\", remove old docs/outputs, and copy # newly generated docs to \"docs\" projr_run(   skip_quarto_project = TRUE,   clear_output_and_docs = TRUE,   copy_docs = TRUE ) } # }"}]
